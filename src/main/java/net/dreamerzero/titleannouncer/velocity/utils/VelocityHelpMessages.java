package net.dreamerzero.titleannouncer.velocity.utils;

import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.event.ClickEvent;
import net.kyori.adventure.text.event.HoverEvent;

import static net.kyori.adventure.text.Component.*;
import static net.kyori.adventure.text.format.NamedTextColor.*;

import net.dreamerzero.titleannouncer.common.utils.MiniMessageUtil;

public class VelocityHelpMessages {
    public final Component titleArguments = text("[Title]; [SubTitle]", AQUA);
    public final Component actionbarArguments = text("[ActionBar]", AQUA);
    public final Component bossbarArguments = text("[Time] [Color] [Style] [BossBar]", AQUA);
    public final Component titleHelpMessage = text()
        .append(text()
            .append(text("Title", YELLOW))
        )
        .append(newline())
        .append(text()
            .append(text("/vannouncetitle", GOLD))
        )
        .append(space())
        .append(text()
            .append(titleArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/vselftitle", GOLD))
        )
        .append(space())
        .append(text()
            .append(titleArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/servertitle", GOLD))
        )
        .append(space())
        .append(text()
            .append(text("[Server]", AQUA))
        )
        .append(space())
        .append(text()
            .append(titleArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/vsendtitle", GOLD))
        )
        .append(space())
        .append(text()
            .append(text("[Player]", AQUA))
        )
        .append(space())
        .append(text()
            .append(titleArguments)
        )
        .build();

    public final Component actionbarHelpMessage = text()
        .color(YELLOW)
        .append(text()
            .append(text("ActionBar"))
        )
        .append(newline())
        .append(text()
            .append(text("/vannounceactionbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(actionbarArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/vselfactionbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(actionbarArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/serveractionbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(text("[Server]", AQUA))
        )
        .append(space())
        .append(text()
            .append(actionbarArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/vsendactionbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(text("[Player]", AQUA))
        )
        .append(space())
        .append(text()
            .append(actionbarArguments)
        )
        .build();

    public final Component bossbarHelpMessage = text()
        .color(YELLOW)
        .append(text()
            .append(text("BossBar"))
        )
        .append(newline())
        .append(text()
            .append(text("/vannouncebossbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(bossbarArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/vselfbossbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(bossbarArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/serverbossbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(text("[Server]", AQUA))

        )
        .append(space())
        .append(text()
            .append(bossbarArguments)
        )
        .append(newline())
        .append(text()
            .append(text("/vsendbossbar", GOLD))
        )
        .append(space())
        .append(text()
            .append(text("[Player]", AQUA))

        )
        .append(space())
        .append(text()
            .append(bossbarArguments)
        )
        .build();

    public final Component fullwikilink = text()
        .append(text()
            .append(Component.text("Visit full guide on"))
            .color(GOLD)
        )
        .append(space())
        .append(text()
            .append(text("WIKI"))
            .clickEvent(ClickEvent.openUrl("https://github.com/4drian3d/TitleAnnouncer/wiki"))
            .hoverEvent(HoverEvent.showText(
                new MiniMessageUtil().parse("<gradient:red:blue>Click Here</gradient>"))))
        .build();
    public final Component titlewikilink = text()
        .append(text()
            .append(Component.text("Visit full guide on"))
            .color(GOLD)
        )
        .append(space())
        .append(text()
            .append(text("WIKI"))
            .clickEvent(ClickEvent.openUrl("https://github.com/4drian3d/TitleAnnouncer/wiki/Title-Commands"))
            .hoverEvent(HoverEvent.showText(
                new MiniMessageUtil().parse("<gradient:red:blue>Click Here</gradient>"))))
            .build();
    public final Component actionbarwikilink = text()
        .append(text()
            .append(Component.text("Visit full guide on"))
            .color(GOLD)
        )
        .append(space())
        .append(text()
            .append(text("WIKI"))
            .clickEvent(ClickEvent.openUrl("https://github.com/4drian3d/TitleAnnouncer/wiki/ActionBar-Commands"))
            .hoverEvent(HoverEvent.showText(
                new MiniMessageUtil().parse("<gradient:red:blue>Click Here</gradient>"))))
            .build();

    public final Component bossbarwikilink = text()
        .append(text()
            .append(Component.text("Visit full guide on"))
            .color(GOLD)
        )
        .append(space())
        .append(text()
            .append(text("WIKI"))
            .clickEvent(ClickEvent.openUrl("https://github.com/4drian3d/TitleAnnouncer/wiki/Bossbar-Commands"))
            .hoverEvent(HoverEvent.showText(
                new MiniMessageUtil().parse("<gradient:red:blue>Click Here</gradient>"))))
            .build();
}
